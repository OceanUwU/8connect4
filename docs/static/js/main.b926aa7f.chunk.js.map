{"version":3,"sources":["theme/index.js","Dialog/index.js","Dialog/show.js","socket/Connect/ing.js","socket/Connect/Failed.js","Home/CodeInput.js","Home/NameInput.js","Home/showMatchOptions.js","Home/index.js","Lobby/getCounter.js","Lobby/Cosmetics.js","Lobby/index.js","Match/index.js","Results/index.js","Match/images.js","Match/shuffleString.js","Match/controller.js","Match/gameplay.js","socket/index.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","main","overrides","MuiButton","textPrimary","borderRadius","border","color","padding","boxShadow","textSecondary","Dialog","props","state","open","handleOpen","bind","handleClose","this","setState","classes","onClose","disablePortal","aria-labelledby","aria-describedby","disableBackdropClick","required","disableEscapeKeyDown","DialogTitle","id","title","DialogContent","dividers","DialogContentText","className","text","description","children","DialogActions","Button","onClick","buttonText","buttonAction","React","Component","withStyles","margin","showDialog","a","Promise","res","Object","assign","layer","element","document","getElementById","createElement","appendChild","ReactDOM","render","ThemeProvider","CssBaseline","ref","dialog","setTimeout","Connecting","CircularProgress","ConnectFailed","error","size","window","location","reload","CodeInput","code","changeInput","tryCode","event","target","value","replace","socket","emit","search","length","slice","history","pushState","htmlFor","FormControl","clsx","textField","variant","InputLabel","FilledInput","onChange","autoComplete","inputProps","textInput","maxLength","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","edge","spacing","marginBottom","joinLabel","display","marginTop","marginRight","width","textTransform","useStyles","makeStyles","input","label","textAlign","NameInput","useState","localStorage","name","setName","changeName","newName","first","Grid","container","justify","alignItems","item","TextField","activeElement","blur","InputLabelProps","allowedPlayers","maxGamesAllowed","formControl","select","timerMarks","timerMarksFormat","n","options","defaultMatchOptions","MatchOptions","JSON","parse","NumberTweaker","ButtonGroup","fn","disabled","min","max","sendUpdate","editable","started","public","publicity","setPublicity","players","setPlayers","gameMax","setGameMax","lineLength","setLineLength","columns","setColumns","changeColumns","rows","setRows","changeRows","indexOf","turnTime","setTurnTime","runDownTimer","setRunDownTimer","customBots","setCustomBots","names","nameConvention","setNameConvention","updateOptions","useEffect","addEventListener","removeEventListener","Divider","style","FormLabel","Typography","component","Switch","checked","change","RadioGroup","Number","row","map","FormControlLabel","control","Radio","Select","displayEmpty","filter","MenuItem","FormHelperText","top","fontSize","minWidth","paddingRight","Slider","step","marks","keys","String","getAriaValueText","valueLabelFormat","valueLabelDisplay","Checkbox","labelPlacement","0","1","2","showMatchOptions","stringify","changeOptions","newOptions","dispatchEvent","Event","hostChanged","amNowHost","logoImage","maxWidth","controls","Home","showTutorial","videoId","Link","href","rel","tutorialWatched","height","src","frameBorder","allow","allowFullScreen","hasOwnProperty","gutterBottom","alt","getCounter","c","cosmetics","imgName","repeat","availableCounters","i","char","emptySelection","s","f","Cosmetics","selection","setSelection","ToggleButtonGroup","available","choice","ToggleButton","p","newSelection","root","privacyIcon","table","head","backgroundColor","tableCell","you","fontWeight","counterStyle","Lobby","tableBody","amHost","startsWith","matchInfo","host","content","push","TableRow","TableCell","Tooltip","starting","bot","Audio","startTimer","play","copyHelp","copyTitle","setCopyTitle","copy","protocol","TableContainer","Paper","Table","TableHead","anchorEl","setAnchorEl","Boolean","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","diff","index","TableBody","gameInfo","justifyContent","borderBottom","zIndex","flexGrow","gameInfoTitle","gameInfoContent","colourIndicator","playerArea","paddingTop","paddingBottom","selfGameImage","maxHeight","otherGameImage","playingGamesContainer","playingGames","flexWrap","otherGamesContainer","otherGames","vsMe","GameImage","colour","game","playerIDs","find","playerId","opponent","player","data-playercolour","playerColour","self","games","myId","TurnTakenIndicator","cx","cy","r","fill","PlayerGames","gameRowClass","b","Match","selfPlayer","gamesContainer","marginLeft","gameImage","counterImage","otherPlayer","Results","playerClass","winnersStop","results","score","join","placement","rjCode","shuffleString","images","counters","Image","hover","outcomeOverlay","j","jA","k","kA","l","img","boxSize","boardWidth","canvas","ctx","getContext","slot","turn","clearRect","fillStyle","fillRect","changedTouches","bbox","getBoundingClientRect","x","clientX","left","y","clientY","newSlot","Math","floor","image","complete","drawImage","move","gamesLeft","gameNameChars","placeAudio","otherPlaceAudio","gameEndAudio","startTurnAudio","intervals","turnNumber","turnTimerEnd","Date","now","showTimer","timeLeft","innerHTML","toFixed","playMatch","startingMatchInfo","sentId","font","textBaseline","column","fromEntries","order","newImages","getImage","g","controller","touchAction","drawBoardsOfId","timer","setInterval","switchTurn","newTurn","getElementsByClassName","classList","add","remove","drawCounter","checkLine","rD","cD","toCheck","checking","every","t","highlightColours","drawBoard","overlayImage","isDraw","showOrder","piece","fillText","globalAlpha","winner","winLocation","tiles","concat","squaresDone","some","square","gridlineSize","wrh","newWidth","newHeight","xOffset","yOffset","setTransform","toDataURL","board","socketIOClient","serverLocation","transports","connectedOnce","displayConnectionFail","disconnected","toString","disconnect","on","kicker","gameplay","gameId","status","setAttribute","querySelectorAll","outcome","boardId","relativeOutcome","getAttribute","clearInterval","sort"],"mappings":"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","file":"static/js/main.b926aa7f.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n\n        background: {\n            default: '#050505',\n        },\n\n        primary: {\n            main: '#d49a3d',\n        },\n    },\n\n    overrides: {\n        MuiButton: {\n            textPrimary: {\n                background: 'linear-gradient(45deg, #ff7b00 0%, #ff00ff 100%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            },\n\n            textSecondary: {\n                background: 'linear-gradient(45deg, rgb(255,37,180) 30%, rgb(198,19,19) 90%)',\n                borderRadius: 3,\n                border: 0,\n                color: 'white !important',\n                padding: '0 30px',\n                boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            }\n        },\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = theme => ({\n    text: {\n        margin: 0,\n    },\n});\n\nclass Dialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleOpen() {\n        this.setState({open: true});\n    };\n\n    handleClose() {\n        this.setState({open: false});\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <MUIDialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    disablePortal\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={this.props.required}\n                    disableEscapeKeyDown={this.props.required}\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n                    <DialogContent dividers>\n                        <DialogContentText className={classes.text} id=\"alert-dialog-description\">\n                            {this.props.description}\n                        </DialogContentText>\n                        {this.props.children}\n                    </DialogContent>\n                    <DialogActions>\n                        {this.props.required ? null : (\n                            <Button onClick={this.handleClose} color=\"secondary\">\n                                Close\n                            </Button>\n                        )}\n                        {this.props.buttonText ? (\n                            <Button onClick={this.props.buttonAction} color=\"primary\">\n                                {this.props.buttonText}\n                            </Button>\n                        ) : null}\n                    </DialogActions>\n                </MUIDialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Dialog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Dialog from './';\n\nasync function showDialog(props = {}, children = null) {\n    return new Promise(async res => {\n        props = Object.assign({\n            title: 'Dialog title',\n            required: false,\n        }, props);\n    \n        let dialog;\n        let id = `dialog${props.layer ? props.layer : 0}`;\n        let element = document.getElementById(id);\n        if (element == null) {\n            element = document.createElement('div');\n            element.id = id;\n            document.getElementById('dialog').appendChild(element);\n        }\n        ReactDOM.render((\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Dialog {...props} ref={element => dialog = element}>\n                    {children}\n                </Dialog>\n            </ThemeProvider>\n        ), element);\n        \n        if (!dialog) //if it didnt work,\n            setTimeout(async () => res(await showDialog(props, children)), 100); //try it again with a delay (yes i know i shouldnt but shut up it works)\n        else {\n            dialog.handleOpen();\n            res(dialog);\n        }\n    });\n}\n\nexport default showDialog;","import React from 'react';\nimport './centred.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Connecting() {\n    return (\n        <div className=\"centred\">\n            <CircularProgress />\n            <h3>Attempting to connect to the 8connect4 server...</h3>\n        </div>\n    );\n}\n\nexport default Connecting;","import React from 'react';\nimport './centred.css';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\n\nfunction ConnectFailed(props) {\n    return (\n        <div className=\"centred\">\n            <ClearIcon />\n            <h3>Failed to connect to the 8connect4 server.</h3>\n            {props.error ? <p>Error: \"{props.error}\"</p> : null}\n            <h4>Are you offline? If not, the 8connect4 server might be down.</h4>\n            <Button size=\"large\" color=\"primary\" onClick={() => window.location.reload(false)}>Retry</Button>\n        </div>\n    );\n}\n\nexport default ConnectFailed;","import React from 'react';\nimport socket from '../socket/';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst useStyles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    joinLabel: {\n        display: 'inline-block',\n        marginTop: 22,\n        marginRight: 4,\n    },\n    textField: {\n        width: '18ch',\n    },\n    textInput: {\n        textTransform: 'uppercase',\n    },\n});\n\nclass CodeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n        };\n        this.changeInput = this.changeInput.bind(this);\n        this.tryCode = this.tryCode.bind(this);\n    }\n\n    changeInput(event) {\n        let code = event.target.value; //get the code entered from the input element\n        code = code.replace(' ', ''); //remove spaces, if any\n        this.setState({code}); //store the code in the state, so that it can be shown on the input element and accessed when the join button is clicked\n    }\n\n    tryCode() {\n        socket.emit('joinMatch', this.state.code);\n    }\n\n    componentDidMount() {\n        /*if (window.location.search.startsWith('?$')) {\n            let p = window.location.search.slice('?$'.length);\n        } else */if (window.location.search.length > 1) {\n            this.setState({code: window.location.search.slice(1)}, () => this.tryCode());\n            window.history.pushState('', '', '/');\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <label {...{}/*className={classes.joinLabel}*/} htmlFor=\"roomCodeInput\">Or, join by code:</label>\n                <br />\n\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"roomCodeInput\">Room code</InputLabel>\n                    <FilledInput\n                        id=\"roomCodeInput\"\n                        type=\"text\"\n                        value={this.state.code}\n                        onChange={this.changeInput}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.textInput,\n                            maxLength: 6,\n                            onKeyDown: e => {if (e.key == 'Enter') this.tryCode()},\n                        }}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Join\"\n                                    onClick={this.tryCode}\n                                    edge=\"end\"\n                                >\n                                    <ArrowForwardIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(CodeInput);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport socket from '../socket';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        width: 170,\n    },\n    label: {\n        textAlign: 'center',\n    },\n}));\n\nfunction NameInput() {\n    const classes = useStyles();\n    const [name, setName] = React.useState(localStorage.name ? localStorage.name : '');\n    const changeName = (newName, first = false) => {\n        if (!first)\n            setName(newName);\n        localStorage.name = newName;\n        socket.emit('changeName', newName);\n    }\n    changeName(name, true);\n\n    const handleChange = event => changeName(event.target.value)\n\n    return (\n        <div className={classes.margin}>\n            <Grid container justify=\"center\" spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"nameInput\"\n                        label=\"Your name\"\n                        value={name}\n                        onChange={handleChange}\n                        autoComplete=\"off\"\n                        inputProps={{\n                            className: classes.input,\n                            maxLength: 12,\n                            onKeyDown: e => {if (e.key == 'Enter') document.activeElement.blur()},\n                        }}\n                        InputLabelProps={{\n                            className: classes.label,\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default NameInput","import React from 'react';\nimport { Typography, Divider, FormControl, Select, MenuItem, InputLabel, FormLabel, Slider, Grid, Switch, Button, ButtonGroup, FormControlLabel, Checkbox, RadioGroup, Radio, FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport showDialog from '../Dialog/show';\nimport socket from '../socket';\nimport defaultMatchOptions from './defaultMatchOptions.json';\nconst allowedPlayers = [1, 25];\nconst maxGamesAllowed = [1, 4];\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    select: {\n        width: 50,\n    },\n}));\n\nconst timerMarks = [\n    5,\n    8,\n    12,\n    15,\n    20,\n    25,\n    30,\n    45,\n    60,\n    120,\n    200,\n    300,\n];\nconst timerMarksFormat = n => `${timerMarks[n]}s`;\n\nvar options = {\n    ...defaultMatchOptions,\n    ...localStorage.MatchOptions ? JSON.parse(localStorage.MatchOptions) : {}\n};\n\nfunction NumberTweaker(props) {\n    return (\n        <ButtonGroup size=\"small\">\n            <Button onClick={() => props.fn(-10)} disabled={props.disabled || props.state == props.min}>- -</Button>\n            <Button onClick={() => props.fn(-1)} disabled={props.disabled || props.state == props.min}>-</Button>\n            <Button disabled>{props.state}</Button>\n            <Button onClick={() => props.fn(+1)} disabled={props.disabled || props.state == props.max}>+</Button>\n            <Button onClick={() => props.fn(+10)} disabled={props.disabled || props.state == props.max}>++</Button>\n        </ButtonGroup>\n    );\n}\n\nfunction MatchOptions(props) {\n    const classes = useStyles();\n\n    const sendUpdate = () => {\n        if (props.editable && props.started)\n            socket.emit('updateOptions', options);\n    }\n    const [publicity, setPublicity] = React.useState(options.public);\n    const handlePublicityChange = event => {\n        options.public = !publicity;\n        setPublicity(!publicity);\n        sendUpdate();\n    };\n    const [players, setPlayers] = React.useState(options.players);\n    const changePlayers = change => {\n        options.players += change;\n        if (options.players < allowedPlayers[0]) options.players = allowedPlayers[0];\n        if (options.players > allowedPlayers[1]) options.players = allowedPlayers[1];\n        setPlayers(options.players);\n        sendUpdate();\n    };\n    const [gameMax, setGameMax] = React.useState(options.gameMax);\n    const changeGameMax = change => {\n        options.gameMax += change;\n        if (options.gameMax < maxGamesAllowed[0]) options.gameMax = maxGamesAllowed[0];\n        if (options.gameMax > maxGamesAllowed[1]) options.gameMax = maxGamesAllowed[1];\n        setGameMax(options.gameMax);\n        sendUpdate();\n    };\n    const [lineLength, setLineLength] = React.useState(options.lineLength);\n    const changeLineLength = (event, value) => {\n        value = Number(value);\n        options.lineLength = value;\n        setLineLength(value);\n        if (columns < value)\n            changeColumns({target: {value}});\n        if (rows < value)\n            changeRows({target: {value}});\n        sendUpdate();\n    };\n    const [columns, setColumns] = React.useState(options.columns);\n    const changeColumns = event => {\n        options.columns = event.target.value;\n        setColumns(event.target.value);\n        sendUpdate();\n    };\n    const [rows, setRows] = React.useState(options.rows);\n    const changeRows = event => {\n        options.rows = event.target.value;\n        setRows(event.target.value);\n        sendUpdate();\n    };\n    const [turnTime, setTurnTime] = React.useState(timerMarks.indexOf(options.turnTime));\n    const handleTurnTimeChange = (event, value) => {\n        options.turnTime = timerMarks[value];\n        setTurnTime(value);\n        sendUpdate();\n    };\n    const [runDownTimer, setRunDownTimer] = React.useState(options.runDownTimer);\n    const handleRunDownTimerChange = event => {\n        options.runDownTimer = !runDownTimer;\n        setRunDownTimer(!runDownTimer);\n        sendUpdate();\n    };\n    const [customBots, setCustomBots] = React.useState(options.customBots);\n    const handleCustomBotsChange = event => {\n        options.customBots = !customBots;\n        setCustomBots(!customBots);\n        sendUpdate();\n    };\n    const [nameConvention, setNameConvention] = React.useState(options.names);\n    const handleNameConventionChange = event => {\n        options.names = event.target.value;\n        setNameConvention(event.target.value);\n        sendUpdate();\n    };\n    \n    let updateOptions = () => {\n        setPublicity(options.public);\n        setPlayers(options.players);\n        setGameMax(options.gameMax);\n        setLineLength(options.lineLength);\n        setColumns(options.columns);\n        setRows(options.rows);\n        setTurnTime(timerMarks.indexOf(options.turnTime));\n        setRunDownTimer(options.runDownTimer);\n    };\n    React.useEffect(() => {\n        window.addEventListener('matchOptionsChanged', updateOptions);\n        return () => window.removeEventListener('matchOptionsChanged', updateOptions);\n    }, []);\n\n    return (\n        <div>\n            <Divider style={{marginTop: 16}} />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Privacy</FormLabel>\n                <Typography component=\"div\">\n                    <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                        <Grid item><LockIcon /></Grid>\n                        <Grid item>\n                            <Switch color=\"primary\" checked={publicity} onChange={handlePublicityChange} disabled={!props.editable} />\n                        </Grid>\n                        <Grid item><PublicIcon /></Grid>\n                    </Grid>\n                </Typography>\n\n                {props.started ? <Button color={props.editable ? 'primary' : 'disabled'} size=\"small\" onClick={() => socket.emit('newRoomCode')} disabled={!props.editable}>New room code</Button> : null}\n            </FormControl>\n\n            {props.started ? null : <span>\n                <Divider />\n                \n                <FormControl className={classes.formControl}>\n                    <FormLabel style={{marginBottom: 5}}>Max players</FormLabel>\n                    <NumberTweaker fn={changePlayers} min={allowedPlayers[0]} max={allowedPlayers[1]} state={players} disabled={!props.editable} />\n                </FormControl>\n            </span>}\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel style={{marginBottom: 5}}>Max games per player per colour</FormLabel>\n                <NumberTweaker fn={changeGameMax} min={maxGamesAllowed[0]} max={maxGamesAllowed[1]} state={gameMax} disabled={!props.editable} />\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Row length to win</FormLabel>\n                <RadioGroup value={lineLength} onChange={changeLineLength} row>\n                    {[3, 4, 5, 6].map(n => <FormControlLabel value={n} key={n} control={<Radio color=\"primary\" disabled={!props.editable} />} label={n} />)}\n                </RadioGroup>\n            </FormControl>\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n                <FormLabel>Board Size</FormLabel>\n            </FormControl>\n            <br />\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={columns}\n                    onChange={changeColumns}\n                    displayEmpty\n                    className={classes.select}\n                    disabled={!props.editable}\n                >\n                    {[3, 4, 5, 6, 7, 8, 9, 10].filter(n => n >= lineLength).map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Columns</FormHelperText>\n            </FormControl>\n            <span style={{\n                position: 'relative',\n                top: 10,\n                fontSize: 35,\n            }}>×</span>\n            <FormControl className={classes.formControl}>\n                <Select\n                    value={rows}\n                    onChange={changeRows}\n                    displayEmpty\n                    className={classes.select}\n                    disabled={!props.editable}\n                >\n                    {[3, 4, 5, 6, 7, 8, 9, 10].filter(n => n >= lineLength).map(n => <MenuItem key={n} value={n}>{n}</MenuItem>)}\n                </Select>\n                <FormHelperText>Rows</FormHelperText>\n            </FormControl>\n\n            {/*<FormControl className={classes.formControl}>\n                <InputLabel>Players</InputLabel>\n                <Select value={players} onChange={handlePlayersChange}>\n                    {[...Array(allowedPlayersMax+1).keys()].slice(allowedPlayersMin).map(i => <MenuItem value={i}>{i}</MenuItem>)}\n                </Select>\n            </FormControl>*/}\n\n            <Divider />\n\n            <FormControl className={classes.formControl} style={{minWidth: 300, paddingRight: 10}}>\n                <FormLabel>Turn time</FormLabel>\n                <Slider\n                    value={turnTime}\n                    onChange={handleTurnTimeChange}\n                    step={null}\n                    marks={[...timerMarks.keys()].map(n => ({value: n, label: String(timerMarks[n])}))}\n                    min={0}\n                    max={timerMarks.length-1}\n                    getAriaValueText={timerMarksFormat}\n                    valueLabelFormat={timerMarksFormat}\n                    valueLabelDisplay=\"auto\"\n                    disabled={!props.editable}\n                />\n            </FormControl>\n            \n            <Divider />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={runDownTimer} onChange={handleRunDownTimerChange} disabled={!props.editable} />}\n                label=\"Always run down turn timer?\"\n                labelPlacement=\"start\"\n            />\n            \n            <Divider />\n\n            <FormControlLabel\n                control={<Checkbox color=\"primary\" checked={customBots} onChange={handleCustomBotsChange} disabled={!props.editable} />}\n                label=\"Should bots customize?\"\n                labelPlacement=\"start\"\n            />\n\n            <Divider />\n\n            <FormControl className={classes.formControl}>\n            <FormLabel>Naming convention</FormLabel>\n                <Select\n                    value={nameConvention}\n                    onChange={handleNameConventionChange}\n                    disabled={!props.editable}\n                >\n                    <MenuItem value={0}>Normal</MenuItem>\n                    <MenuItem value={1}>Gifted</MenuItem>\n                    <MenuItem value={2}>Random</MenuItem>\n                </Select>\n                <FormHelperText>{(() => ({\n                    0: 'Players use their chosen name',\n                    1: 'Players\\' chosen names are shuffled between them',\n                    2: 'Generates a silly name for each player',\n                }[nameConvention]))()}</FormHelperText>\n            </FormControl>\n        </div>\n    );\n}\n\nfunction changeOptions(newOptions) {\n    options = newOptions;\n    window.dispatchEvent(new Event('matchOptionsChanged'));\n}\n\nfunction hostChanged(amNowHost) {\n    if (dialog.state.open && dialog.editable != amNowHost)\n        showMatchOptions(amNowHost, true);\n}\n\nvar dialog = {\n    state: {\n        open: false,\n    }\n};\n\nasync function showMatchOptions(editable, started) {\n    let elem;\n\n    dialog = await showDialog({\n        ...(started ? {\n            title: 'Match options',\n            description: 'Current options (editable by the host):',\n        } : {\n            title: 'Create Match',\n            description: 'Match options:',\n            buttonText: 'Create',\n            buttonAction: () => {\n                dialog.handleClose();\n                localStorage.MatchOptions = JSON.stringify(options);\n                socket.emit('createMatch', options);\n            }\n        }),\n    }, <MatchOptions editable={editable} started={started} />);\n    dialog.editable = editable;\n}\n\nexport default {\n    showMatchOptions,\n    changeOptions,\n    hostChanged,\n};","import React from 'react';\nimport { Typography, Button, Divider, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeInput from './CodeInput';\nimport NameInput from './NameInput';\nimport socket from '../socket';\nimport showMatchOptions from './showMatchOptions';\nimport showDialog from '../Dialog/show';\n\nconst useStyles = makeStyles({\n    logoImage: {\n        display: 'block',\n        textAlign: 'center',\n        margin: 'auto',\n        maxWidth: 350,\n    },\n\n    controls: {\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n});\n\nfunction Home() {\n    const classes = useStyles();\n    let showTutorial = async () => {\n        let videoId = 'gU3dUQvGNcE';\n        let dialog = await showDialog({\n            layer: 'tutorial',\n            title: 'New to 8connect4?',\n            description: <span>Watch <Link href={`https://youtu.be/${videoId}`} target=\"_blank\" rel=\"noopener\">this short video</Link> for an explanation of 8connect4.</span>,\n            buttonText: 'Don\\'t show again',\n            buttonAction: () => {\n                dialog.handleClose();\n                localStorage.tutorialWatched = true\n            },\n        }, <iframe width=\"550\" height=\"300\" src={`https://www.youtube.com/embed/${videoId}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>)\n    };\n    React.useEffect(() => {\n        if (!localStorage.hasOwnProperty('tutorialWatched'))\n            showTutorial();\n    }, []);\n\n    return (\n        <div>\n            <Typography className={classes.title} variant=\"h3\" gutterBottom><img className={classes.logoImage} src=\"/iconanimated.png\" alt=\"8connect4\" /></Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                Play 8 games of connect 4 at once. <Link onClick={showTutorial}>Watch tutorial</Link>\n            </Typography>\n\n            <div className={classes.controls}>\n                <NameInput />\n\n                <Divider />\n                <br />\n\n                <Button size=\"large\" color=\"primary\" onClick={() => socket.emit('findMatch')}>Find Match</Button>\n                <br />\n                <Button size=\"small\" color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions(true, false)}>Create Match</Button>\n\n                <br /><br /><br />\n\n                <CodeInput />\n            </div>\n\n            <div style={{textAlign: 'center', marginTop: 30}}>\n                <a href=\"https://ocean.lol\">\n                    <img width={100} src=\"https://ocean.lol/media/mark-w.png\" />\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import availableCounters from './availableCounters.json';\n\nexport default function getCounter(c, cosmetics) {\n    let imgName = `${c}${'x'.repeat(availableCounters.length)}`;\n    for (let i of availableCounters)\n        imgName = imgName.slice(0, i.char) + cosmetics[c][i.key] + imgName.slice(i.char+1);\n    return imgName;\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport availableCounters from './availableCounters.json';\nimport socket from '../socket';\nimport getCounter from './getCounter';\n\nconst emptySelection = {};\nfor (let i of ['a', 'b']) {\n    emptySelection[i] = {\n        s: 0, //shape\n        c: 0, //colour\n        f: 0, //filled\n    }\n}\n\nfunction Cosmetics() {\n    const [selection, setSelection] = React.useState(localStorage.hasOwnProperty('cosmetics') ? JSON.parse(localStorage.cosmetics) : JSON.parse(JSON.stringify(emptySelection)));\n    let select = (a, p, s) => {\n        let newSelection = JSON.parse(JSON.stringify(selection));\n        newSelection[a][p] = s;\n        setSelection(newSelection);\n        socket.emit('cosmetics', newSelection);\n        localStorage.cosmetics = JSON.stringify(newSelection);\n    };\n\n    return (\n        <div>\n            {['a', 'b'].map(c => {\n                let imgName = getCounter(c, selection);\n                \n                return <div>\n                    <hr />\n                    {availableCounters.map(a => <div>\n                        <ToggleButtonGroup value={[selection[c][a.key]]}>{a.available.map(choice => <ToggleButton style={{padding: 2}} onClick={() => select(c, a.key, choice)} value={choice}>\n                            <img width={30} src={`/counters/${imgName.slice(0, a.char) + choice + imgName.slice(a.char+1)}.png`} />\n                        </ToggleButton>)}</ToggleButtonGroup>\n                    </div>)}\n                </div>;\n            })}\n        </div>\n    );\n}\n\nexport default Cosmetics;","import React from 'react';\nimport { Typography, Divider, Button, ButtonGroup, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport PublicIcon from '@material-ui/icons/Public';\nimport LockIcon from '@material-ui/icons/Lock';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LinkIcon from '@material-ui/icons/Link';\nimport EditIcon from '@material-ui/icons/Edit';\nimport socket from '../socket';\nimport copy from 'clipboard-copy';\nimport NameInput from '../Home/NameInput';\nimport Cosmetics from './Cosmetics';\nimport showDialog from '../Dialog/show';\nimport showMatchOptions from '../Home/showMatchOptions';\nimport getCounter from './getCounter';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    privacyIcon: {\n        marginRight: 10\n    },\n\n    table: {\n        width: 400,\n        margin: 'auto',\n    },\n\n    head: {\n        backgroundColor: 'black',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    you: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n\n    counterStyle: {\n        width: 20,\n        marginBottom: -5,\n    }\n});\n\nfunction Lobby(props) {\n    const classes = useStyles();\n\n    let tableBody = [];\n    let amHost = socket.id.startsWith(props.matchInfo.host);\n    for (let i = 0; i < props.matchInfo.options.players; i++) {\n        let content = '';\n        let you = false;\n        if (i in props.matchInfo.players) {\n            content = props.matchInfo.players[i].name;\n            you = socket.id.startsWith(props.matchInfo.players[i].id);\n        }\n        tableBody.push(\n            <TableRow key={i}>\n                <TableCell className={classes.tableCell}>\n                    {i in props.matchInfo.players && props.matchInfo.host == props.matchInfo.players[i].id ?\n                        <Tooltip title=\"This player is the host. They have the ability to start the game.\">\n                            <StarsIcon fontSize=\"inherit\" />\n                        </Tooltip>\n                    : null}\n                    {you ? <span className={classes.you}>{content}</span> : content}\n                    {i in props.matchInfo.players ? ['a', 'b'].map(c => <img className={classes.counterStyle} src={`/counters/${getCounter(c, props.matchInfo.players[i].cosmetics)}.png`} />) : null}\n                    {you ? <Tooltip title=\"Change your name\">\n                        <IconButton size=\"small\" onClick={() => showDialog({title: 'Customise'}, <div>\n                            <NameInput />\n                            <Cosmetics />\n                        </div>)}><EditIcon fontSize=\"inherit\" /></IconButton>\n                    </Tooltip> : null}\n                    {i in props.matchInfo.players && amHost && !props.matchInfo.starting && !you ? <span>\n                        <Tooltip title=\"Kick - remove this player from this lobby.\">\n                            <IconButton size=\"small\" onClick={() => socket.emit('kick', props.matchInfo.players[i].id)}><ClearIcon fontSize=\"inherit\" /></IconButton>\n                        </Tooltip>\n                        {!props.matchInfo.players[i].bot ? \n                            <Tooltip title=\"Promote - transfer your host privileges to this player.\" onClick={() => socket.emit('promote', props.matchInfo.players[i].id)}>\n                                <IconButton size=\"small\"><StarBorderIcon fontSize=\"inherit\" /></IconButton>\n                            </Tooltip>\n                        : null}\n                    </span> : null}\n                </TableCell>\n            </TableRow>\n        );\n    }\n\n    React.useEffect(() => {\n        showMatchOptions.hostChanged(amHost);\n    });\n\n    if (props.matchInfo.starting) {\n        (new Audio(`/countdown/${props.matchInfo.startTimer}.mp3`)).play();\n    }\n\n    let copyHelp = 'Copy a link others can use to join this lobby to your clipboard.';\n    let [copyTitle, setCopyTitle] = React.useState(copyHelp);\n\n    return (\n        <div>\n            <IconButton onClick={() => window.location.reload()}>\n                <MeetingRoomIcon />\n            </IconButton>\n            <div className={classes.root}>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    Room code\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                    <span className={classes.privacyIcon}>\n                        {props.matchInfo.options.public ? <Tooltip title=\"This is a public match. Anyone can join this match from the 'Find Match' button on the homepage.\"><PublicIcon /></Tooltip> : <Tooltip title=\"This is a private match. Only people with the room code can join.\"><LockIcon /></Tooltip>}\n                    </span>\n                    {props.matchInfo.code}\n                    <Tooltip title={copyTitle}>\n                        <IconButton onClick={() => {\n                            copy(`${window.location.protocol}//${window.location.host}?${props.matchInfo.code}`);\n                            setCopyTitle('Copied to clipboard!');\n                            setTimeout(() => {\n                                setCopyTitle(copyHelp);\n                            }, 3000);\n                        }}><LinkIcon /></IconButton>\n                    </Tooltip>\n                </Typography>\n\n                <Button color=\"secondary\" onClick={() => showMatchOptions.showMatchOptions(amHost, true)}>Match options</Button>\n                <br /><br />\n                {props.matchInfo.starting ?\n                    <Typography variant=\"h4\">Starting in {props.matchInfo.startTimer}...</Typography>\n                :\n                    <Tooltip title={amHost ? 'Begin a timer to start the match. No more players will be able to join.' : 'Only the host can start the match.'}>\n                        <span>\n                            <Button color={amHost ? 'primary' : 'default'} size=\"large\" onClick={() => socket.emit('startMatch')} disabled={!amHost}>Start Match</Button>\n                        </span>\n                    </Tooltip>\n                }\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow className={classes.head}>\n                                <TableCell className={classes.tableCell}>\n                                    Players: {props.matchInfo.players.length}/{props.matchInfo.options.players}\n                                    {(() => {\n                                        \n                                        const [anchorEl, setAnchorEl] = React.useState(null);\n\n                                        const handleClick = (event) => {\n                                            setAnchorEl(event.currentTarget);\n                                        };\n\n                                        const handleClose = () => {\n                                            setAnchorEl(null);\n                                        };\n\n                                        const open = Boolean(anchorEl);\n\n                                        return (\n                                            <span>\n                                                {amHost ? <span>\n                                                    <Tooltip title=\"Add bot\">\n                                                        <IconButton size=\"small\" onClick={handleClick}>🤖</IconButton>\n                                                    </Tooltip>\n                                                    <Popover\n                                                        open={open}\n                                                        anchorEl={anchorEl}\n                                                        onClose={handleClose}\n                                                        anchorOrigin={{\n                                                            vertical: 'bottom',\n                                                            horizontal: 'center',\n                                                        }}\n                                                        transformOrigin={{\n                                                            vertical: 'top',\n                                                            horizontal: 'center',\n                                                        }}\n                                                    >\n                                                        <ButtonGroup variant=\"text\" color=\"default\" aria-label=\"text primary button group\">\n                                                            {['Easy', 'Medium', 'Hard'].map((diff, index) => <Button onClick={() => socket.emit('bot', index)}>{diff}</Button>)}\n                                                        </ButtonGroup>\n                                                    </Popover>\n                                                </span> : null}\n                                            </span>\n                                        );\n                                    })()}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n}\n\nexport default Lobby;","import React from 'react';\nimport { Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './index.css';\nimport getCounter from '../Lobby/getCounter.js';\n\nconst useStyles = makeStyles({\n    gameInfo: {\n        display: 'flex',\n        width: '100%',\n        marginBottom: 20,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'black',\n        borderBottom: '1px solid #ffffff1f',\n        zIndex: 100,\n        '& div': {\n            flexGrow: 1,\n        },\n    },\n\n    gameInfoTitle: {\n        textAlign: 'center',\n    },\n\n    gameInfoContent: {\n        display: 'flex',\n        alignItems: 'end',\n        justifyContent: 'center',\n        /*textAlign: 'center',\n        '& *': {\n            display: 'inline',\n        },*/\n    },\n\n    title: {\n        textAlign: 'center',\n    },\n\n    colourIndicator: {\n        height: 49,\n    },\n\n    playerArea: {\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginBottom: 16,\n        textAlign: 'center',\n        border: '1px solid #ffffff1f',\n        borderRadius: 10,\n    },\n\n    selfGameImage: {\n        maxWidth: 125,\n        maxHeight: 125,\n        width: 'auto',\n        height: 'auto',\n    },\n\n    otherGameImage: {\n        maxWidth: 100,\n        maxHeight: 100,\n        width: 'auto',\n        height: 'auto',\n    },\n\n    playingGamesContainer: {\n    },\n\n    playingGames: {\n        display: 'flex',\n        maxWidth: 600,\n        margin: 'auto',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGamesContainer: {\n        display: 'flex',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    otherGames: {\n        display: 'flex',\n        maxWidth: 600,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n\n    vsMe: {\n        color: 'red',\n    }\n});\n\nfunction GameImage(props) {\n    const classes = useStyles();\n    let colour = Object.keys(props.game.playerIDs).find(c => props.playerId.startsWith(props.game.playerIDs[c]));\n    let opponent = props.players.find(player => player.id.startsWith(props.game.playerIDs[colour == 'a' ? 'b' : 'a']));// props.players.find(player => player.id.startsWith(Object.values(props.game.playerIDs).find(player => !props.playerId.startsWith(player))));\n\n    return (\n        <div>\n            <img data-playercolour={props.playerColour} className={`${props.self ? 'self-game ' : ''}${props.self ? classes.selfGameImage : classes.otherGameImage} ${props.self && props.games.length == 1 && props.playerColour == 'b' ? 'game-b' : `game-${colour}`} game${props.game.id}`} />\n            <Typography variant=\"caption\" display=\"block\">\n                Game {props.game.name} vs {props.myId.startsWith(opponent.id) ? <span className={classes.vsMe}>{opponent.name}</span> : opponent.name}\n            </Typography>\n        </div>\n    );\n}\n\nconst turnTakenIndicatorSize = 13;\nfunction TurnTakenIndicator(props) {\n    return (\n        <svg height={props.size} width={props.size}>\n            <circle id={`playerTurnIndicator-${props.player}`} cx={props.size/2} cy={props.size/2} r={props.size/2} fill=\"red\" />\n        </svg>\n    );\n}\n\nfunction PlayerGames(props) {\n    const classes = useStyles();\n    let gameRowClass = props.self ? classes.playingGames : classes.otherGames;\n\n    return (\n        <div className={classes.playerArea}>\n            {\n                props.self\n                ?\n                <div>\n                    <Typography variant=\"h4\">{props.player.name} <TurnTakenIndicator size={23} player={props.player.id.slice(0, 6)} /></Typography>\n                    <Divider />\n                </div>\n                :\n                <Typography variant=\"h6\" gutterBottom>{props.player.name} <TurnTakenIndicator size={14} player={props.player.id} /></Typography>\n            }\n            <div className={props.self ? classes.playingGamesContainer : classes.otherGamesContainer}>\n                <div className={gameRowClass}>\n                    {props.self ? <img className={`${classes.colourIndicator} colour-indicator-a`} src={`/counters/${getCounter('a', props.player.cosmetics)}.png`} /> : null}\n                    {props.games.filter(game => props.player.id.startsWith(game.playerIDs.a)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'a'} playerId={props.player.id} myId={props.myId} />)}\n                    {props.self ? null : <img className={`${classes.colourIndicator} colour-indicator-a`} src={`/counters/${getCounter('a', props.player.cosmetics)}.png`} />}\n                </div>\n                {props.self ? <div id=\"controller\" className={classes.controls} /> : null}\n                <div className={gameRowClass}>\n                    <img className={`${classes.colourIndicator} colour-indicator-b`} src={`/counters/${getCounter('b', props.player.cosmetics)}.png`} />\n                    {props.games.filter(game => props.player.id.startsWith(game.playerIDs.b)).map(game => <GameImage self={props.self} game={game} games={props.games} players={props.players} playerColour={'b'} playerId={props.player.id} myId={props.myId} />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction Match(props) {\n    const classes = useStyles();\n    let selfPlayer = props.players.find(player => props.myId.startsWith(player.id));\n\n    return (\n        <div>\n            <div className={classes.gameInfo}>\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Ongoing games\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"gamesLeft\">0</span>\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            /<span id=\"maxGames\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn time left\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <span id=\"turnTime\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={classes.gameInfoTitle}>\n                        <Typography variant=\"subtitle1\">\n                            Turn\n                        </Typography>\n                    </div>\n                    <div className={classes.gameInfoContent}>\n                        <Typography variant=\"h3\">\n                            <img height=\"35\" id=\"turnIndicator\" />\n                            <span id=\"turnNumber\">0</span>\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <Typography variant=\"h2\" style={{textAlign: 'center'}}>{props.games.filter(game => props.players[0].id.startsWith(game.playerIDs.a)).length+props.games.filter(game => props.players[0].id.startsWith(game.playerIDs.b)).length}connect{props.matchInfo.options.lineLength}</Typography>\n                <PlayerGames player={selfPlayer} players={props.players} games={props.games} self={true} myId={props.myId} />\n                {props.players.filter(player => !props.myId.startsWith(player.id)).map(player => (\n                    <PlayerGames player={player} players={props.players} games={props.games} self={false} myId={props.myId} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Match;","import React from 'react';\nimport { Typography, Tooltip, IconButton, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Button, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport socket from '../socket/';\n//import { gameNameChars } from '../Match/gameplay';\nimport getCounter from '../Lobby/getCounter.js';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: 'center',\n    },\n\n    tableCell: {\n        textAlign: 'center',\n    },\n\n    gamesContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& div': {\n            marginLeft: 25,\n            marginRight: 25,\n        },\n    },\n\n    gameImage: {\n        width: 150,\n    },\n\n    counterImage: {\n        height: 10,\n    },\n\n    you: {\n        color: 'red',\n    },\n\n    otherPlayer: {\n    },\n});\n\nfunction Results(props) {\n    const classes = useStyles();\n\n    let playerClass = player => {\n        return props.myId.startsWith(player.id) ? classes.you : classes.otherPlayer;\n    }\n\n    let winnersStop = 0;\n    for (let i = 1; i < props.results.length; i++) {\n        if (props.results[i].score == props.results[0].score)\n            winnersStop = i;\n        else\n            break;\n    }\n\n    (new Audio('/endMatch.mp3')).play();\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <IconButton onClick={() => window.location.reload()}>\n                    <HomeIcon />\n                </IconButton>\n\n                <Typography variant=\"h2\">\n                    Winner{winnersStop == 0 ? '' : 's'}:\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    {props.results.slice(0, winnersStop+1).map(player => player.name).join(', ')}\n                </Typography>\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {props.results.map(player => (\n                                <TableRow>\n                                    <TableCell className={classes.tableCell}>\n                                        {player.placement}. {props.myId.startsWith(player.id) ? <span className={classes.you}>{player.name}</span> : player.name} with a score of {player.score}.\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Button color=\"primary\" size=\"large\" style={{margin: '16px 0'}} onClick={() => socket.emit('rejoin', props.rjCode, props.matchInfo.options)}>Play again</Button>\n\n                <Divider/>\n\n                <Typography variant=\"h3\">\n                    Games\n                </Typography>\n                <div className={classes.gamesContainer}>\n                    {props.games.map(game => (\n                        <div>\n                            <img src={game.src} className={classes.gameImage} />\n                            <Typography variant=\"caption\" display=\"block\">\n                                Game {game.name}\n                                <br />\n                                <span className={playerClass(game.players.a)}>{game.players.a.name}</span> <img className={classes.counterImage} src={`/counters/${getCounter('a', game.players.a.cosmetics)}.png`} /> vs <img className={classes.counterImage} src={`/counters/${getCounter('b', game.players.b.cosmetics)}.png`} /> <span className={playerClass(game.players.b)}>{game.players.b.name}</span>\n                                {/*<br />\n                                {game.outcome == false ? 'Draw' : <span>Winner: <img className={classes.counterImage} src={`/${game.outcome}.png`} /></span>}*/}\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;","import availableCounters from '../Lobby/availableCounters.json';\n\nconst images = {\n    counters: {},\n    a: new Image(),\n    b: new Image(),\n    hover: {},\n    outcomeOverlay: {}\n};\n\nfor (let i of ['a', 'b']) {\n    images.hover[i] = [];\n    for (let j of availableCounters.find(a => a.key == 'c').available) {\n        let src = `/${i}.png`;\n        images.hover[i].push(new Image());\n        images.hover[i][images.hover[i].length - 1].src = `/hover_${i}${j}.png`;\n    }\n    images.counters[i] = [];\n    for (let j of availableCounters[0].available) {\n        let jA = []\n        for (let k of availableCounters[1].available) {\n            let kA = []\n            for (let l of availableCounters[2].available) {\n                let img = new Image();\n                img.src = `/counters/${i}${k}${j}${l}.png`;\n                kA.push(img);\n            }\n            jA.push(kA)\n        }\n        images.counters[i].push(jA);\n    }\n}\n\nfor (let i of ['win', 'loss', 'draw', 'end']) {\n    let img = new Image();\n    img.src = `/outcome/${i}.png`;\n    images.outcomeOverlay[i] = img;\n}\n\nexport default images;","function getRandomInt(n) {\n    return Math.floor(Math.random() * n);\n}\n\nfunction shuffleString(s) {\n    let arr = s.split('');\n    let n = arr.length;\n\n    for(let i=0 ; i<n-1 ; ++i) {\n        let j = getRandomInt(n);\n        \n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    s = arr.join('');\n    return s;\n}\n\nexport default shuffleString;","import socket from '../socket';\n\nvar images;\n\nconst boxSize = 100;\nconst gridlineSize = 4;\nvar boardWidth = 7;\n\nvar canvas = document.createElement('canvas');\ncanvas.width = ((gridlineSize + boxSize) * boardWidth) + gridlineSize;\ncanvas.height = boxSize + (gridlineSize * 2);\nvar ctx = canvas.getContext('2d');\n\nvar slot = null;\nvar turn = 'a';\n\nfunction setImages(newImages) {\n    images = newImages;\n}\n\nfunction turnChange(newTurn) {\n    turn = newTurn;\n    slot = null;\n    render();\n}\n\nfunction setupController(matchInfo, newImages) {\n    images = newImages;\n    boardWidth = matchInfo.columns;\n    canvas.width = ((gridlineSize + boxSize) * boardWidth) + gridlineSize;\n}\n\nfunction render(event = null) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n    ctx.fillStyle = 'white';\n\n    for (let i = 0; i < boardWidth + 1; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, 0, gridlineSize, canvas.height);\n    for (let i = 0; i < 2; i++)\n        ctx.fillRect(0, (boxSize+gridlineSize)*i, canvas.width, gridlineSize);\n\n    if (event != null) {\n        if (event.type.startsWith('touch'))\n            event = event.changedTouches[0];\n        let bbox = event.target.getBoundingClientRect();\n        let x = (event.clientX - bbox.left - gridlineSize) * (canvas.width / bbox.width);\n        let y = (event.clientY - bbox.top - gridlineSize) * (canvas.height / bbox.height);\n        if (x < 0 || y < 0) return;\n\n        if (y >= boxSize) return;\n        if (x%(boxSize+gridlineSize) >= boxSize) return;\n\n        let newSlot = Math.floor(x/(boxSize+gridlineSize));\n        if (slot != newSlot) {\n            slot = newSlot;\n            socket.emit('hover', slot);\n        }\n    }\n\n    if (slot != null) {\n        let image = images[turn];\n        if (image.complete)\n            ctx.drawImage(image, gridlineSize+((boxSize+gridlineSize)*slot), gridlineSize, boxSize, boxSize);\n    }\n}\n\nfunction move() {\n    socket.emit('move', turn, slot);\n    slot = null;\n    socket.emit('hover', slot);\n    render();\n}\n\nrender();\ncanvas.addEventListener('mousemove', render);\ncanvas.addEventListener('touchstart', render);\ncanvas.addEventListener('touchmove', render);\ncanvas.addEventListener('touchend', move);\ncanvas.addEventListener('mousedown', move);\n\nexport {\n    canvas,\n    setImages,\n    setupController,\n    turnChange,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Match from './';\nimport Results from '../Results';\nimport shuffleString from './shuffleString';\nimport images from './images';\nimport * as controller from './controller';\n\nconst boxSize = 50;\nconst gridlineSize = 4;\nconst gameNameChars = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst placeAudio = new Audio('/place.mp3');\nconst otherPlaceAudio = new Audio('/otherPlace.mp3');\nconst gameEndAudio = new Audio('/endGame.mp3');\nconst startTurnAudio = new Audio('/startTurn.mp3');\n\n\nvar matchInfo;\nvar myId;\nvar games = [];\nvar gamesLeft;\nvar intervals = [];\nvar turnNumber = 0;\nvar turn = 'a';\nvar turnTimerEnd = Date.now();\n\nvar canvas = document.createElement('canvas');\nvar ctx = canvas.getContext('2d');\n\nfunction showTimer() {\n    let timeLeft = (turnTimerEnd - Date.now()) / 1000;\n    if (timeLeft < 0)\n        timeLeft = 0;\n    document.getElementById('turnTime').innerHTML = timeLeft.toFixed(2);\n}\n\nfunction playMatch(startingMatchInfo, sentId) {\n    myId = sentId;\n    matchInfo = startingMatchInfo;\n    canvas.width = (boxSize * matchInfo.columns) + ((matchInfo.columns + 1) * gridlineSize);\n    canvas.height = (boxSize + gridlineSize) * (matchInfo.rows + 1);\n    ctx.font = `30px Roboto`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    turnNumber = 0;\n    for (let i in startingMatchInfo.games) {\n        let game = startingMatchInfo.games[i];\n        let state = [];\n        for (let y = 0; y < matchInfo.rows; y++) {\n            let column = [];\n            for (let x = 0; x < matchInfo.columns; x++) {\n                column.push(null);\n            }\n            state.push(column);\n        }\n\n        games.push({\n            id: i,\n            name: (i+1 > gameNameChars.length ? `${gameNameChars[~~(i/gameNameChars.length)]}${gameNameChars[i%gameNameChars.length]}` : gameNameChars[i]),\n            playerIDs: game.players,\n            players: Object.fromEntries(Object.keys(game.players).map(i => [i, matchInfo.players.find(player => player.id == game.players[i])])),\n            state: state,\n            order: JSON.parse(JSON.stringify(state)),\n        });\n    }\n    gamesLeft = games.length;\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Match matchInfo={matchInfo} players={startingMatchInfo.players} games={games} myId={myId} /></ThemeProvider>, document.getElementById('root'), () => {\n        controller.setupController(startingMatchInfo, Object.fromEntries(['a', 'b'].map(c => [c, getImage(games.find(g => myId.startsWith(g.playerIDs[c])), c)])));\n        document.getElementById('controller').appendChild(controller.canvas);\n        controller.canvas.style.touchAction = 'none';\n        document.getElementById('maxGames').innerHTML = gamesLeft;\n        document.getElementById('gamesLeft').innerHTML = gamesLeft;\n        for (let i in games)\n            drawBoardsOfId(i);\n        intervals.timer = setInterval(showTimer, 1000/24);\n        (new Audio('/startMatch.mp3')).play();\n    });\n}\n\nfunction switchTurn(newTurn) {\n    document.getElementById('turnNumber').innerHTML = ++turnNumber;\n    turn = newTurn;\n    turnTimerEnd = Date.now() + matchInfo.turnTime;\n    for (let element of [...document.getElementsByClassName(`game-${turn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${turn == 'a' ? 'b' : 'a'}`)])\n        element.classList.add('inactive-game');\n    for (let element of [...document.getElementsByClassName(`game-${turn}`), ...document.getElementsByClassName(`colour-indicator-${turn}`)])\n        element.classList.remove('inactive-game');\n    setTimeout(() => {\n        for (let element of [...document.getElementsByClassName(`game-${turn == 'a' ? 'b' : 'a'}`), ...document.getElementsByClassName(`colour-indicator-${turn == 'a' ? 'b' : 'a'}`)])\n            element.classList.add('inactive-game');\n        for (let element of [...document.getElementsByClassName(`game-${turn}`), ...document.getElementsByClassName(`colour-indicator-${turn}`)])\n            element.classList.remove('inactive-game');\n    }, 50);\n    for (let game of games) {\n        game.hover = null;\n    }\n    document.getElementById('turnIndicator').src = `/${turn}.png`;\n    controller.turnChange(turn);\n    if (turnNumber > 1)\n        startTurnAudio.play();\n}\n\nfunction hover(gameId, colour, column) {\n    if (colour == turn)\n        games[gameId].hover = column;\n    drawBoardsOfId(gameId);\n}\n\nfunction move(gameId, colour, column, row) {\n    let game = games[gameId];\n    game.state[column][row] = colour;\n    game.order[column][row] = turnNumber;\n    game.hover = null;\n    drawBoardsOfId(gameId);\n    if (!myId.startsWith(game.players[colour].id))\n        otherPlaceAudio.play();\n}\n\nfunction takenTurn(colour) {\n    placeAudio.play();\n    if (colour == turn) {\n        for (let i of document.querySelectorAll(`.self-game.game-${colour}`))\n            i.classList.add('inactive-game');\n    }\n}\n\nfunction drawCounter(image, column, row) {\n    if (image.complete)\n        ctx.drawImage(image, ((boxSize+gridlineSize)*Number(column))+gridlineSize, (boxSize+gridlineSize)*(Number(row)+1), boxSize, boxSize);\n}\n\nfunction checkLine(state, r, c, rD, cD) {\n    let toCheck = state[r][c];\n    if (toCheck === null) return null;\n    let checking = [];\n    for (let i = 1; i < matchInfo.lineLength; i++)\n        checking.push([r + (i * rD), c + (i * cD)]);\n    if (checking.every(t => state[t[0]][t[1]] === toCheck))\n        return [[r, c], ...checking];\n    else\n        return null;\n}\n\nfunction getImage(game, colour) {\n    let c = game.players[colour].cosmetics[colour];\n    return images.counters[colour][c.c][c.s][c.f];\n}\n\nconst highlightColours = {a: ['f58600', 'ff0010', 'ffd700', 'ff1a96'], b: ['03ffff', '2415ff', '00ff00', '0fff7d']};\nfunction drawBoard(game, overlayImage = null, isDraw = false, showOrder = false) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //clear canvas\n\n    //draw gridlines\n    ctx.fillStyle = 'white';\n    for (let i = 0; i <= matchInfo.rows; i++)\n        ctx.fillRect(0, boxSize+((boxSize+gridlineSize)*i), canvas.width, gridlineSize);\n    for (let i = 0; i <= matchInfo.columns; i++)\n        ctx.fillRect((boxSize+gridlineSize)*i, boxSize, gridlineSize, canvas.height-boxSize);\n\n    for (let i in game.state)\n        for (let j in game.state[i]) {\n            let piece = game.state[i][j];\n            if (piece != null) {\n                drawCounter(getImage(game, piece), j, i);\n                if (showOrder) {\n                    ctx.fillStyle = 'white';\n                    ctx.fillText(String(game.order[i][j]), ((boxSize+gridlineSize)*Number(j))+gridlineSize+(boxSize/2), (boxSize+gridlineSize)*(Number(i)+1)+(boxSize/2)+3);\n                }\n            }\n        }\n    \n    if (game.hover !== null) {\n\n        drawCounter(getImage(game, turn), game.hover, -1); //draw counter above board\n\n        //draw counter inside board\n        let row = null;       \n        for (let i = 0; i < matchInfo.rows; i++) {\n            if (game.state[i][game.hover] != null) {\n                row = i - 1;\n                break;\n            }\n        }\n        if (row == -1) //if the top slot was full\n            row = false; //skip this turn\n        if (row == null) //if all the slots were empty\n            row = matchInfo.rows - 1; //use the bottom slot\n        if (row !== false) {\n            if (images.hover[turn][game.players[turn].cosmetics[turn].c].complete) {\n                ctx.globalAlpha = 0.15;\n                ctx.drawImage(images.hover[turn][game.players[turn].cosmetics[turn].c], ((boxSize+gridlineSize)*Number(game.hover))+gridlineSize, boxSize+gridlineSize, boxSize, (boxSize+gridlineSize)*(Number(row)+1)-gridlineSize);\n            }\n            ctx.globalAlpha = 0.5;\n            drawCounter(getImage(game, turn), game.hover, row);\n            ctx.globalAlpha = 1; //reset alpha\n        }\n        \n\n    }\n\n    if (!isDraw) {\n        let winner;\n        let winLocation = [];\n\n        //Check down\n        for (let r = 0; r <= matchInfo.rows - matchInfo.lineLength; r++)\n            for (let c = 0; c < matchInfo.columns; c++) {\n                let tiles = checkLine(game.state, r, c, 1, 0);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n    \n        //Check right\n        for (let r = 0; r < matchInfo.rows; r++)\n            for (let c = 0; c <= matchInfo.columns - matchInfo.lineLength; c++) {\n                let tiles = checkLine(game.state, r, c, 0, 1);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n    \n        //Check down-right\n        for (let r = 0; r <= matchInfo.rows - matchInfo.lineLength; r++)\n            for (let c = 0; c <= matchInfo.columns - matchInfo.lineLength; c++) {\n                let tiles = checkLine(game.state, r, c, 1, 1);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n    \n        //Check down-left\n        for (let r = matchInfo.rows - (matchInfo.rows - matchInfo.lineLength + 1); r < matchInfo.rows; r++)\n            for (let c = 0; c <= matchInfo.columns - matchInfo.lineLength; c++) {\n                let tiles = checkLine(game.state, r, c, -1, 1);\n                if (tiles != null) {\n                    winner = game.state[r][c];\n                    winLocation = winLocation.concat(tiles);\n                }\n            }\n        let squaresDone = [];\n        for (let i of winLocation) {\n            if (!squaresDone.some(square => JSON.stringify(square) == JSON.stringify(i))) {\n                squaresDone.push(i);\n                ctx.fillStyle = '#' + highlightColours[winner][game.players[winner].cosmetics[winner].c] + 'af';\n                ctx.fillRect(\n                    ((boxSize+gridlineSize)*i[1])+gridlineSize,\n                    (boxSize+gridlineSize)*(i[0]+1),\n                    boxSize, boxSize\n                );\n            }\n        }\n        /*ctx.lineWidth = 5;\n        ctx.beginPath();\n        ctx.moveTo(((boxSize+gridlineSize)*Number(winLocation[1]))+gridlineSize, (boxSize+gridlineSize)*(Number(winLocation[0])+1));\n        ctx.lineTo(((boxSize+gridlineSize)*Number(winLocation[3]))+gridlineSize, (boxSize+gridlineSize)*(Number(winLocation[2])+1));\n        ctx.stroke();*/\n    }\n\n    if (overlayImage != null && overlayImage.complete) {\n        ctx.globalAlpha = 0.75;\n        //draw grey \"window\"\n        ctx.fillStyle = '#6060607B';\n        ctx.fillRect(gridlineSize, boxSize+gridlineSize, ((boxSize+gridlineSize)*matchInfo.columns)-gridlineSize, ((boxSize+gridlineSize)*matchInfo.rows)-gridlineSize);\n        //draw black border\n        ctx.fillStyle = 'black';\n        ctx.fillRect(0, boxSize, canvas.width, gridlineSize); //top border\n        ctx.fillRect(0, canvas.height-gridlineSize, canvas.width, gridlineSize); //bottom border\n        ctx.fillRect(0, boxSize+gridlineSize, gridlineSize, canvas.height - boxSize - gridlineSize * 2); //left border\n        ctx.fillRect(canvas.width-gridlineSize, boxSize+gridlineSize, gridlineSize, canvas.height - boxSize - gridlineSize * 2); //right border\n        //draw icon\n        let wrh = overlayImage.width / overlayImage.height;\n        let newWidth = canvas.width - (gridlineSize * 2);\n        let newHeight = newWidth / wrh;\n        if (newHeight > canvas.height) {\n            newHeight = canvas.height - (boxSize + (gridlineSize * 2));\n            newWidth = newHeight * wrh;\n        }\n        let xOffset = newWidth < canvas.width ? ((canvas.width - newWidth) / 2) : 0;\n        let yOffset = newHeight < canvas.height ? ((canvas.height + boxSize - newHeight) / 2) : 0;\n\n        ctx.drawImage(overlayImage, xOffset, yOffset, newWidth, newHeight);\n        //\n        //ctx.drawImage(overlayImage, 0, 0, canvas.width, canvas.height);\n        //reset\n        ctx.globalAlpha = 1;\n        ctx.setTransform(1,0,0,1,0,0);\n    }\n    \n    return canvas.toDataURL();\n}\n\nfunction drawBoardsOfId(id) {\n    let board = drawBoard(games[id]);\n    for (let i of document.getElementsByClassName(`game${id}`))\n        i.src = board;\n}\n\nfunction outcomeDecided(boardId, outcome) {\n    document.getElementById('gamesLeft').innerHTML = --gamesLeft;\n    games[boardId].outcome = outcome;\n\n    for (let i of document.getElementsByClassName(`game${boardId}`)) {\n        i.classList.add('game-outcome-decided');\n        let relativeOutcome;\n        let glowColor;\n        if (outcome == false) {\n            relativeOutcome = 'draw';\n            glowColor = 'red';\n        } else if (outcome == i.getAttribute('data-playercolour')) {\n            relativeOutcome = 'win';\n            glowColor = 'green';\n        } else {\n            relativeOutcome = 'loss';\n            glowColor = 'grey';\n        }\n        i.src = drawBoard(games[boardId], images.outcomeOverlay[relativeOutcome], outcome == false);\n    }\n\n    gameEndAudio.play();\n}\n\nfunction endMatch(results, rjCode) {\n    for (let i in intervals) {\n        clearInterval(intervals[i]);\n        delete intervals[i];\n    }\n\n    for (let game of games) {\n        game.src = drawBoard(game, null, game.outcome == false, true);\n    }\n    games.sort((a, b) => gameNameChars.indexOf(a.name) - gameNameChars.indexOf(b.name));\n\n    ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Results myId={myId} results={results} matchInfo={matchInfo} games={games} rjCode={rjCode} /></ThemeProvider>, document.getElementById('root'));\n\n    matchInfo = null;\n    games = [];\n    intervals = [];\n}\n\nfunction turnStatus(player, status) {\n    document.getElementById(`playerTurnIndicator-${player}`).setAttribute('fill', status ? 'green' : 'red');\n}\n\nexport {\n    playMatch,\n    hover,\n    move,\n    takenTurn,\n    drawBoard,\n    switchTurn,\n    outcomeDecided,\n    endMatch,\n    turnStatus,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport theme from '../theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport socketIOClient from 'socket.io-client';\nimport serverLocation from './server.json';\nimport showDialog from '../Dialog/show';\nimport Connecting from './Connect/ing';\nimport ConnectFailed from './Connect/Failed';\nimport Home from '../Home';\nimport Lobby from '../Lobby';\nimport * as gameplay from '../Match/gameplay';\nimport defaultMatchOptions from '../Home/defaultMatchOptions.json';\nimport showMatchOptions from '../Home/showMatchOptions';\n\nvar socket = socketIOClient(serverLocation, {\n    transports: ['websocket'],\n});\nvar connectedOnce = false;\n\nReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Connecting /></ThemeProvider>, document.getElementById('root'));\n\nsocket.on('connect', () => {\n    if (!connectedOnce) {\n        connectedOnce = true;\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Home /></ThemeProvider>, document.getElementById('root'));\n        if (localStorage.hasOwnProperty('cosmetics'))\n            socket.emit('cosmetics', JSON.parse(localStorage.cosmetics));\n    }\n});\n\nfunction displayConnectionFail(error) {\n    setTimeout(() => {\n        if (socket.disconnected) {\n            ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><ConnectFailed error={error.toString()} /></ThemeProvider>, document.getElementById('root'));\n            socket.disconnect();\n        }\n    }, 10000);\n}\n\nsocket.on('connect_error', displayConnectionFail);\nsocket.on('connect_timeout', displayConnectionFail);\nsocket.on('disconnect', displayConnectionFail);\n\nsocket.on('err', (error='Unknown error', title='Error:') => {\n    showDialog({\n        layer: 'err',\n        title: title,\n        description: error,\n    });\n});\n\nsocket.on('noMatches', async () => {\n    let dialog = await showDialog({\n        title: 'No public matches available.',\n        description: 'Maybe create one yourself for people to join?',\n        buttonText: 'Create match with default options',\n        buttonAction: () => {\n            dialog.handleClose();\n            socket.emit('createMatch', {...defaultMatchOptions, public: true});\n        },\n    });\n});\n\nsocket.on('kicked', kicker => {\n    showDialog({\n        required: true,\n        title: 'Kicked!',\n        description: `${kicker} kicked you from the lobby.`,\n        buttonText: 'Back Home',\n        buttonAction: () => window.location.reload(),\n    });\n});\n\n/*\nsocket.on('disconnect', () => {\n    setTimeout(() => {\n        alert('Lost connection to the 8connect4 server.');\n        window.location.reload();\n    }, 200);\n});\n*/\n\nsocket.on('joinMatch', () => {\n});\n\nsocket.on('matchUpdate', matchInfo => {\n    if (!matchInfo.started)\n        ReactDOM.render(<ThemeProvider theme={theme}><CssBaseline /><Lobby matchInfo={matchInfo} /></ThemeProvider>, document.getElementById('root'));\n    showMatchOptions.changeOptions(matchInfo.options);\n});\n\nsocket.on('matchStart', matchInfo => gameplay.playMatch(matchInfo, socket.id));\nsocket.on('turnSwitch', newTurn => gameplay.switchTurn(newTurn));\nsocket.on('hover', (gameId, colour, column) => gameplay.hover(gameId, colour, column));\nsocket.on('move', (gameId, colour, column, row) => gameplay.move(gameId, colour, column, row));\nsocket.on('ts', (player, status) => gameplay.turnStatus(player, status));\nsocket.on('takenTurn', colour => gameplay.takenTurn(colour));\nsocket.on('outcomeDecided', (gameId, outcome) => gameplay.outcomeDecided(gameId, outcome));\nsocket.on('endMatch', (results, rjCode) => gameplay.endMatch(results, rjCode));\nsocket.on('rejoin', code => window.location.href = `/?${code}`);\n\nexport default socket;"],"sourceRoot":""}